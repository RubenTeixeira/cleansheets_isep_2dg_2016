/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.workbookGlobalVariable.ui;

import csheets.core.Cell;
import csheets.core.CellImpl;
import csheets.core.Spreadsheet;
import csheets.core.Value;
import csheets.core.formula.VariableArray;
import csheets.ext.workbookGlobalVariable.WorkbookGlobalVariableController;
import csheets.ext.workbookGlobalVariable.WorkbookGlobalVariableExtension;
import csheets.ui.DefaulListModel;
import csheets.ui.ctrl.UIController;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;

/**
 * This is the Side Bar Panel.
 *
 * @author Pedro Gomes 1130383@isep.ipp.pt
 */
public class WorkbookGlobalVariablePanel extends JPanel {

	/**
	 * UIController. Useful to get the current Workbook.
	 */
	private UIController uicontroller;

	/**
	 * Controller of WorkbookGlobalVariable.
	 */
	private WorkbookGlobalVariableController thecontroller;

	private String newValue;

	private List<Integer> index_values = new ArrayList<>();
	/**
	 * Results.
	 */
	//private List<VariableArrayDTO> results = new ArrayList<>();
	//private List<Value> results = new ArrayList<>();
	private List<String> values = new ArrayList<>();

	private List<VariableArray> variables = new ArrayList<>();

	/**
	 * Results list.
	 */
	private DefaulListModel variables_list = new DefaulListModel();

	private DefaulListModel values_list = new DefaulListModel();

	/**
	 * Creates new form WorkbookGlobalVariablePanel.
	 *
	 * @param uicontroller uicontroller.
	 */
	public WorkbookGlobalVariablePanel(UIController uicontroller) {
		setName(WorkbookGlobalVariableExtension.NAME);
		this.uicontroller = uicontroller;
		thecontroller = new WorkbookGlobalVariableController(uicontroller);
		jVariableList = new JList(variables_list);
		jValueList = new JList(values_list);
		initComponents();
		//run(); //TODO: SET UP NEW THREAD.
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jVariableList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jValueList = new javax.swing.JList();
        jgetVariablesButton = new javax.swing.JButton();

        jVariableList.setModel(new DefaulListModel());

        jVariableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jVariableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jVariableList);

        jValueList.setModel(new DefaulListModel());
        jValueList.setVisible(false);
        jValueList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                jValueListMouseClicked(e);
            }
        });
        jScrollPane2.setViewportView(jValueList);

        jgetVariablesButton.setText("Get Variables");
        jgetVariablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jgetVariablesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jgetVariablesButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jgetVariablesButton)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jgetVariablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jgetVariablesButtonActionPerformed
		values_list.clear();
		variables_list.clear();
//		variables.clear();
		values.clear();
		index_values.clear();
		newValue = null;
		run();

    }//GEN-LAST:event_jgetVariablesButtonActionPerformed

	/**
	 * This method handles different behaviour associated with mouse
	 * interaction. For one-click over the Variable a second List appears and
	 * shows the correspondent Value of that Variable in each position.
	 *
	 * @param evt mouse event.
	 */
	private void jVariableListMouseClicked(MouseEvent evt) {
		if (evt.getClickCount() == 1) { //if clicked once.
			VariableArray var = (VariableArray) jVariableList.getSelectedValue(); //Retrieves Variable.
			for (int i = 1; i < var.getArray().size(); i++) { //iterates through Variable.
				if (!var.getValue(i).toString().equals("0")) { // checks if the Value is not 0.
					index_values.add(i); //adds the position to the integer array.
					values.add("Position: " + i + ": " + var.getValue(i).
						toString()); // adds the correspondent Value to list container.
				}
			}
		}
		buildValueList();

	}

	/**
	 * This method handles behaviour associated with mouse interaction. Runs
	 * after buildValueList.
	 *
	 *
	 * @param e
	 */
	private void jValueListMouseClicked(MouseEvent e) {
		if (e.getClickCount() == 2) { // if clicked twice.
			Value value = new Value();
			createDialogPanel(); //DIALOG.
			value = parseValue();
			int index = jValueList.getSelectedIndex(); //the index selected.
			VariableArray var = (VariableArray) jVariableList.getSelectedValue(); //just to check the name.
			for (VariableArray variable : variables) { //go through all variables in the workbook to find the one to change
				if (variable.getName().equalsIgnoreCase(var.getName())) { // when founded
					variable.addValueToVariable(value, index_values.get(index)); //yep
					break;
				}
			}
		}
		updatesCellContent();
		//refresh();
	}

	/**
	 * This method retrieves the current Workbook using the UIController. The
	 * Workbook provides the access to its variables. This variales will fill
	 * the jVariableList component and from that point access will be granted
	 * for each Value of each position of the Variable.
	 */
	private void run() {
		variables = this.uicontroller.getActiveWorkbook().getAllVariables();
		String count = "There are " + variables.size() + " in the Workbook";
		for (int i = 0; i < variables.size(); i++) {
			variables_list.addElement(variables.get(i)); //adds all variables to the list.
		}
		variables_list.addElement(count); //adds final line to the current list.
		jVariableList.setModel(variables_list); //sets up the list component.
		jVariableList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //single Variable Array Selection.
		jVariableList.setEnabled(true);//sets enabled component.
		jVariableList.setVisible(true);//sets enabled component.

	}

	private void buildValueList() {
		for (int i = 0; i < values.size(); i++) {
			values_list.addElement(values.get(i));
		}
		jValueList.setModel(values_list);
		jValueList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jValueList.setEnabled(true);
		jValueList.setVisible(true);
	}

	private void createDialogPanel() {
		WorkbookGlobalVariableDialog dialog = new WorkbookGlobalVariableDialog();
		dialog.setVisible(true);

		newValue = dialog.getValue(); //Retrieves the new value.
//		JPanel panel = new JPanel();
//		panel.setLayout(new FlowLayout());
//		panel.add(new JLabel("Set Up new Value"));
//		JTextField text

	}

	private Value parseValue() {
		String p = newValue;
		if (newValue.contains("\"")) { //will this work?
			String temp = newValue.substring(1, newValue.length() - 1);
			return new Value(temp);
		} else if (newValue.equals("TRUE")) {
			return new Value(Boolean.TRUE);
		} else if (newValue.equals("FALSE")) {
			return new Value(Boolean.FALSE);
		} else { //its a number;
			double n = Double.parseDouble(newValue);
			return new Value(n);
		}
	}

	private void updatesCellContent() {
		for (Spreadsheet ss : this.uicontroller.getActiveWorkbook()) {
			for (Cell c : ss) {
				CellImpl cell = (CellImpl) c;
				cell.reevatuate_();
			}
		}
	}

	private void refresh() {
		values_list.clear();
		variables_list.clear();
//		variables.clear();
		values.clear();
		index_values.clear();
		newValue = null;
		run();

	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList jValueList;
    private javax.swing.JList jVariableList;
    private javax.swing.JButton jgetVariablesButton;
    // End of variables declaration//GEN-END:variables
}
