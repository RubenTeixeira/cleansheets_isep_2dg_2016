/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.advancedWorkbookSearch.ui;

import csheets.ext.advancedWorkbookSearch.AdvancedWorkbookSearchController;
import csheets.ext.advancedWorkbookSearch.AdvancedWorkbookSearchExtension;
import csheets.ui.DefaulListModel;
import csheets.ui.FileChooser;
import csheets.ui.ctrl.UIController;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Pedro Gomes 1130383@isep.ipp.pt
 */
public class AdvancedWorkbookSearchPanel extends JPanel {

	/**
	 * UIController.
	 */
	private UIController uicontroller;

	/**
	 * AdvancedWorkbookSearchController.
	 */
	private AdvancedWorkbookSearchController controller = new AdvancedWorkbookSearchController();

	/**
	 * Current Search Directory. By default is set to common disk.
	 */
	private File directory = new File("C\\");

	/**
	 * Current Search Pattern. By default is set to common file extension.
	 */
	private String pattern = ".*.cls";

	/**
	 * Searched Files.
	 */
	private List<File> files = new ArrayList<>();

	/**
	 * Results List Model.
	 */
	private DefaulListModel list = new DefaulListModel();

	/**
	 * Semaphore for synch processes.
	 */
	private CountDownLatch semaphore;

	/**
	 * Flare for synch processes.
	 */
	private boolean flare;

	/**
	 * Creates new form AdvancedWorkbookSearchPanel.
	 *
	 * @param uicontroller UIController.
	 */
	public AdvancedWorkbookSearchPanel(UIController uicontroller) {
		setName(AdvancedWorkbookSearchExtension.NAME);
		this.uicontroller = uicontroller;
		//this.jResultList = new JList(list);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPreviewTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jResultList = new javax.swing.JList();
        jPatternField = new javax.swing.JTextField();

        jTextField.setText("C\\...");
        jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("...");
        jButton1.setSize(20, 50);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton2.setText("Search");
        jButton2.setSize(20, 50);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton3.setText("Stop");
        jButton3.setSize(20, 50);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPreviewTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        jPreviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "cell", "cell", "cell", "cell", "cell"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jPreviewTable);

        jResultList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {""};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jResultList);

        jPatternField.setText("pattern");
        jPatternField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPatternFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPatternField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jTextField)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPatternField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * This button retrieves the search directory as a File. A Dialog will
	 * retrieve the directory choosen by the user. The "File" must be a
	 * directory.
	 *
	 * @param evt evt.
	 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		FileChooser dir = new FileChooser(null, null);
		dir.setFileSelectionMode(FileChooser.DIRECTORIES_ONLY);
		dir.showDialog(null, null);
		directory = dir.getSelectedFile();
		//System.out.println(directory.toString());
		jTextField.setText(directory.toString());

    }//GEN-LAST:event_jButton1ActionPerformed

	/**
	 * The Search directory is displayed on this field.
	 *
	 * @param evt evt.
	 */
    private void jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldActionPerformed

    }//GEN-LAST:event_jTextFieldActionPerformed

	/**
	 * Begins the Searching for Files. Sets the internal semaphore to 1.
	 *
	 * @param evt evt.
	 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		//Search Button
		//semaphore = new CountDownLatch(1);
		flare = true;
		performSearch();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		//Stop Button
		flare = false;
		String stop = "Searched Stopped.";
		list.addElement(stop);
		jResultList.setModel(list);
    }//GEN-LAST:event_jButton3ActionPerformed

	/**
	 * Retrieves the pattern text.
	 *
	 * @param evt evt
	 */
    private void jPatternFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPatternFieldActionPerformed
		pattern = jPatternField.getText();

    }//GEN-LAST:event_jPatternFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jPatternField;
    private javax.swing.JTable jPreviewTable;
    private javax.swing.JList jResultList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField;
    // End of variables declaration//GEN-END:variables

	private void performSearch() {
		//must validate dir and pattern.
		//also must it clear the values?
		list.clear(); //clear results
		File dir = directory;
		String patt = pattern;
		Runnable newthread = new Runnable() {
			@Override
			public void run() {
				do {
					//controller.search(directory, pattern, files);
					files = controller.search(dir, patt); //returns all files.
					for (File f : files) {
						if (!list.contains(f)) {
							list.addElement(f);
							jResultList.setModel(list);
							jResultList.
								setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
						}
					}
					System.out.println("I'm still in it.");
					if (flare == false) {
						break;
					}
				} while (flare == true);
				System.out.println("OUT");
			}
		};
		new Thread(newthread).start();
	}
}
