package csheets.ext.sort.ui;

import csheets.core.Cell;
import csheets.core.Spreadsheet;
import csheets.core.formula.compiler.FormulaCompilationException;
import csheets.ext.sort.SortController;
import csheets.ui.ctrl.UIController;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * Core03.2 User Interface.
 * 
 * @author Renato Machado
 */
public class RangedSortDialog extends javax.swing.JDialog {

    private final SortController controller;
    
    private final UIController uiController;
    
    private final DefaultComboBoxModel columnModel;
    
    private final DefaultComboBoxModel typeModel;
    
    private final int[] selectedColumns;
    
    /**
     * Creates new form RangeSortDialog
     * 
     * @param title Dialog title.
     * @param uiController User Interface controller.
     */
    public RangedSortDialog(String title, UIController uiController) {
        initComponents();
        this.setTitle(title);
        
        this.uiController = uiController;
        this.controller = new SortController(uiController);
        
        this.columnModel = new DefaultComboBoxModel();
        columnCombo.setModel(columnModel);
        
        this.selectedColumns = this.controller.getSelectedColumns();
        
        for (int i = 0; i < selectedColumns.length; i++) {
            columnModel.addElement(getColumn(selectedColumns[i]));
        }
        
        String[] types = this.controller.getSortTypes();
        
        this.typeModel = new DefaultComboBoxModel();
        typeCombo.setModel(typeModel);
        
        for (int i = 0; i < types.length; i++) {
            typeModel.addElement(types[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        columnCombo = new javax.swing.JComboBox();
        typeCombo = new javax.swing.JComboBox();
        ascendingRadio = new javax.swing.JRadioButton();
        descendingRadio = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        columnCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        orderGroup.add(ascendingRadio);
        ascendingRadio.setSelected(true);
        ascendingRadio.setText("Ascending");
        ascendingRadio.setToolTipText("Ascending Order");

        orderGroup.add(descendingRadio);
        descendingRadio.setText("Descending");

        jLabel1.setText("Column");

        jLabel2.setText("Type");

        jLabel3.setText("Order");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.setToolTipText("Proceed to sort the column.");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ascendingRadio)
                            .addComponent(descendingRadio)
                            .addComponent(typeCombo, 0, 115, Short.MAX_VALUE)
                            .addComponent(columnCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(columnCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ascendingRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descendingRadio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int column = columnCombo.getSelectedIndex() + 1;
        int type = typeCombo.getSelectedIndex();
        boolean ascending = ascendingRadio.isSelected();
        Cell[][] selectedCells = this.uiController.focusOwner.getSelectedCells();
        
        Cell[][] cells = this.controller.sortRangeOfCells(selectedCells, column, ascending);
        String[][] sorted = new String[cells.length][cells[0].length];
        
        // Brute-force copy.
        for (int i = 0; i < cells.length; i++) {
            for (int j = 0; j < cells[0].length; j++) {
                sorted[i][j] = cells[i][j].getContent();
            }
        }
        
        int[] columns = uiController.focusOwner.getSelectedColumns();
        int[] rows = uiController.focusOwner.getSelectedRows();
        
        Spreadsheet ss = uiController.getActiveSpreadsheet();
        
        for (int i = 0; i < columns.length; i++) {
            for (int j = 0; j < rows.length; j++) {
                try {
                    ss.getCell(columns[i], rows[j]).setContent(sorted[j][i]);
                } catch (FormulaCompilationException ex) {
                    Logger.getLogger(RangedSortDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        repaint();
        
        JOptionPane.showMessageDialog(this, "The selected columns were successfuly sorted.");
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    private String getColumn(int column) {
        String columnStr;
        int tempColumn = column;
        for (columnStr = ""; tempColumn >= 0; tempColumn = tempColumn
                / ('Z' - 'A' + 1) - 1) {
            columnStr = (char) ((char) (tempColumn % ('Z'
                    - 'A' + 1)) + 'A') + columnStr;
        }

        return columnStr;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascendingRadio;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox columnCombo;
    private javax.swing.JRadioButton descendingRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.ButtonGroup orderGroup;
    private javax.swing.JComboBox typeCombo;
    // End of variables declaration//GEN-END:variables
}
